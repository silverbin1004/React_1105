## **생명주기란 무엇인가요?**
-  React 컴포넌트가 생성되고, 업데이트되며, 소멸되는 일련의 과정을 의미한다.

## **컴포넌트의 마운팅 단계에서 호출되는 생명주기 메서드는 무엇인가요?**
- constructor(), getDerivedStateFromProps(), render(), componentDidMount() 메서드가 호출된다.

## **클래스 컴포넌트와 함수형 컴포넌트의 주요 차이점은 무엇인가요?**
- 클래스 컴포넌트는 생명주기 메서드를 직접 정의할 수 있지만, 함수형 컴포넌트는 Hooks를 사용하여 유사한 기능을 구현한다.

## **`componentDidMount()` 메서드의 주요 역할은 무엇인가요?**
- 컴포넌트가 DOM에 마운트된 직후 호출되는 메서드로, 초기 데이터 페칭, 구독 설정, DOM 조작 등의 작업을 수행하는 데 사용된다.

# **`useEffect` Hook은 어떤 생명주기 단계에 해당하나요?**
- 마운팅, 업데이트, 언마운팅 단계에서 발생하는 사이드 이펙트를 관리할 수 있어 컴포넌트의 componentDidMount, componentDidUpdate, componentWillUnmount와 유사한 역할을 한다.

## **클래스 컴포넌트에서 상태를 초기화하는 메서드는 무엇인가요?**
- this.state

## **함수형 컴포넌트에서 상태 관리를 위해 사용하는 Hook은 무엇인가요?**
- useState

### **`componentWillUnmount()` 메서드는 언제 호출되나요?**
- 컴포넌트가 언마운트 될 때 호출된다.

## **`shouldComponentUpdate()` 메서드는 어떤 역할을 하나요?**
- 클래스 컴포넌트가 업데이트될지 여부를 결정하는 역할을 한다.

## **에러 경계를 설정하기 위해 사용하는 컴포넌트는 무엇인가요?**
- 에러 바운더리라는 React에서 제공하는 특수한 클래스 컴포넌트를 사용한다.

## **`getSnapshotBeforeUpdate()` 메서드는 어떤 상황에서 사용되나요?**
- DOMd에서의 특정 상태를 기록하거나 스크롤 위치와 같은 정보를 캡처하는 데 사용된다.

## **`useState` Hook의 기본 사용법을 설명해주세요.**
- import React, { useState } from 'react'; 로 useState를 불러오고, 
ex) const [state, setState] = useState(0); -> setState 함수를 호출하여 상태를 변경한다.

## **클래스 컴포넌트에서 `render()` 메서드의 역할은 무엇인가요?**
- 컴포넌트가 화면에 표시할 UI를 정의하는 역할을 한다.

## **`componentDidCatch()` 메서드는 어떤 목적으로 사용되나요?**
- 컴포넌트 트리의 하위에서 발생한 자바스크립트 오류를 잡아내고 처리하는 메서드로 에러를 로깅하거나, 대체 UI를 표시하여 사용자 경험을 개선하는 데 사용된다.

## **함수형 컴포넌트에서 생명주기 메서드를 대체하는 Hook은 무엇인가요?**
- useEffect를 사용하여 생명주기 메서드를 함수형 컴포넌트에서 동일하게 사용할 수 있도록 해준다.